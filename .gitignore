# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# FRONTEND
# dependencies
frontend/node_modules

# next.js
frontend/.next/
frontend/out/

# production
frontend/build

# debug
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/.pnpm-debug.log*

# env files
frontend/.env*

# vercel
frontend/.vercel

# typescript
frontend/*.tsbuildinfo
frontend/next-env.d.ts


# BACKEND ------------------------------------------------------------

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
/backend/[Dd]ebug/
/backend/[Dd]ebugPublic/
/backend/[Rr]elease/
/backend/[Rr]eleases/
/backend/x64/
/backend/x86/
/backend/[Ww][Ii][Nn]32/
/backend/[Aa][Rr][Mm]/
/backend/[Aa][Rr][Mm]64/
/backend/bld/
/backend/[Bb]in/
/backend/[Oo]bj/
/backend/[Ll]og/
/backend/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
/backend/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
/backend/Generated\ Files/

# MSTest test Results
/backend/[Tt]est[Rr]esult*/
/backend/[Bb]uild[Ll]og.*

# NUnit
/backend/*.VisualState.xml
/backend/TestResult.xml
/backend/nunit-*.xml

# Build Results of an ATL Project
/backend/[Dd]ebugPS/
/backend/[Rr]eleasePS/
/backend/dlldata.c

# Benchmark Results
/backend/BenchmarkDotNet.Artifacts/

# .NET Core
/backend/project.lock.json
/backend/project.fragment.lock.json
/backend/artifacts/

# ASP.NET Scaffolding
/backend/ScaffoldingReadMe.txt

# StyleCop
/backend/StyleCopReport.xml

# Files built by Visual Studio
/backend/*_i.c
/backend/*_p.c
/backend/*_h.h
/backend/*.ilk
/backend/*.meta
/backend/*.obj
/backend/*.iobj
/backend/*.pch
/backend/*.pdb
/backend/*.ipdb
/backend/*.pgc
/backend/*.pgd
/backend/*.rsp
/backend/*.sbr
/backend/*.tlb
/backend/*.tli
/backend/*.tlh
/backend/*.tmp
/backend/*.tmp_proj
/backend/*_wpftmp.csproj
/backend/*.log
/backend/*.tlog
/backend/*.vspscc
/backend/*.vssscc
/backend/.builds
/backend/*.pidb
/backend/*.svclog
/backend/*.scc

# Chutzpah Test files
/backend/_Chutzpah*

# Visual C++ cache files
/backend/ipch/
/backend/*.aps
/backend/*.ncb
/backend/*.opendb
/backend/*.opensdf
/backend/*.sdf
/backend/*.cachefile
/backend/*.VC.db
/backend/*.VC.VC.opendb

# Visual Studio profiler
/backend/*.psess
/backend/*.vsp
/backend/*.vspx
/backend/*.sap

# Visual Studio Trace Files
/backend/*.e2e

# TFS 2012 Local Workspace
/backend/$tf/

# Guidance Automation Toolkit
/backend/*.gpState

# ReSharper is a .NET coding add-in
/backend/_ReSharper*/
/backend/*.[Rr]e[Ss]harper
/backend/*.DotSettings.user

# TeamCity is a build add-in
/backend/_TeamCity*

# DotCover is a Code Coverage Tool
/backend/*.dotCover

# AxoCover is a Code Coverage Tool
/backend/.axoCover/*
!/backend/.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
/backend/coverage*.json
/backend/coverage*.xml
/backend/coverage*.info

# Visual Studio code coverage results
/backend/*.coverage
/backend/*.coveragexml

# NCrunch
/backend/_NCrunch_*
/backend/.*crunch*.local.xml
/backend/nCrunchTemp_*

# MightyMoose
/backend/*.mm.*
/backend/AutoTest.Net/

# Web workbench (sass)
/backend/.sass-cache/

# Installshield output folder
/backend/[Ee]xpress/

# DocProject is a documentation generator add-in
/backend/DocProject/buildhelp/
/backend/DocProject/Help/*.HxT
/backend/DocProject/Help/*.HxC
/backend/DocProject/Help/*.hhc
/backend/DocProject/Help/*.hhk
/backend/DocProject/Help/*.hhp
/backend/DocProject/Help/Html2
/backend/DocProject/Help/html

# Click-Once directory
/backend/publish/

# Publish Web Output
/backend/*.[Pp]ublish.xml
/backend/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
/backend/*.pubxml
/backend/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
/backend/PublishScripts/

# NuGet Packages
/backend/*.nupkg
# NuGet Symbol Packages
/backend/*.snupkg
# The packages folder can be ignored because of Package Restore
/backend/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!/backend/**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
/backend/*.nuget.props
/backend/*.nuget.targets

# Microsoft Azure Build Output
/backend/csx/
/backend/*.build.csdef

# Microsoft Azure Emulator
/backend/ecf/
/backend/rcf/

# Windows Store app package directories and files
/backend/AppPackages/
/backend/BundleArtifacts/
/backend/Package.StoreAssociation.xml
/backend/_pkginfo.txt
/backend/*.appx
/backend/*.appxbundle
/backend/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
/backend/*.[Cc]ache
# but keep track of directories ending in .cache
!/backend/?*.[Cc]ache/

# Others
/backend/ClientBin/
/backend/~$*
/backend/*~
/backend/*.dbmdl
/backend/*.dbproj.schemaview
/backend/*.jfm
/backend/*.pfx
/backend/*.publishsettings
/backend/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
/backend/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
/backend/_UpgradeReport_Files/
/backend/Backup*/
/backend/UpgradeLog*.XML
/backend/UpgradeLog*.htm
/backend/ServiceFabricBackup/
/backend/*.rptproj.bak

# SQL Server files
/backend/*.mdf
/backend/*.ldf
/backend/*.ndf

# Business Intelligence projects
/backend/*.rdl.data
/backend/*.bim.layout
/backend/*.bim_*.settings
/backend/*.rptproj.rsuser
/backend/*- [Bb]ackup.rdl
/backend/*- [Bb]ackup ([0-9]).rdl
/backend/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
/backend/FakesAssemblies/

# GhostDoc plugin setting file
/backend/*.GhostDoc.xml

# Node.js Tools for Visual Studio
/backend/.ntvs_analysis.dat
/backend/node_modules/

# Visual Studio 6 build log
/backend/*.plg

# Visual Studio 6 workspace options file
/backend/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
/backend/*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
/backend/*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
/backend/*.dsw
/backend/*.dsp

# Visual Studio 6 technical files
/backend/*.ncb
/backend/*.aps

# Visual Studio LightSwitch build output
/backend/**/*.HTMLClient/GeneratedArtifacts
/backend/**/*.DesktopClient/GeneratedArtifacts
/backend/**/*.DesktopClient/ModelManifest.xml
/backend/**/*.Server/GeneratedArtifacts
/backend/**/*.Server/ModelManifest.xml
/backend/_Pvt_Extensions

# Paket dependency manager
/backend/.paket/paket.exe
/backend/paket-files/

# FAKE - F# Make
/backend/.fake/

# CodeRush personal settings
/backend/.cr/personal

# Python Tools for Visual Studio (PTVS)
/backend/__pycache__/
/backend/*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
/backend/*.tss

# Telerik's JustMock configuration file
/backend/*.jmconfig

# BizTalk build output
/backend/*.btp.cs
/backend/*.btm.cs
/backend/*.odx.cs
/backend/*.xsd.cs

# OpenCover UI analysis results
/backend/OpenCover/

# Azure Stream Analytics local run output
/backend/ASALocalRun/

# MSBuild Binary and Structured Log
/backend/*.binlog

# NVidia Nsight GPU debugger configuration file
/backend/*.nvuser

# MFractors (Xamarin productivity tool) working folder
/backend/.mfractor/

# Local History for Visual Studio
/backend/.localhistory/

# Visual Studio History (VSHistory) files
/backend/.vshistory/

# BeatPulse healthcheck temp database
/backend/healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
/backend/MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
/backend/.ionide/

# Fody - auto-generated XML schema
/backend/FodyWeavers.xsd

# VS Code files for those working on multiple tools
/backend/.vscode/*
!/backend/.vscode/settings.json
!/backend/.vscode/tasks.json
!/backend/.vscode/launch.json
!/backend/.vscode/extensions.json
/backend/*.code-workspace

# Local History for Visual Studio Code
/backend/.history/

# Windows Installer files from build outputs
/backend/*.cab
/backend/*.msi
/backend/*.msix
/backend/*.msm
/backend/*.msp

# JetBrains Rider
/backend/*.sln.iml

/backend/.containers/

# Build results and cache files
/backend/**/*.cache
/backend/**/*.AssemblyInfo.cs
/backend/**/*.AssemblyInfoInputs.cache
/backend/**/*.assets.cache
/backend/**/*.GeneratedMSBuildEditorConfig.editorconfig
/backend/**/obj/
/backend/**/bin/


# CODEBASE ------------------------------------------------------------

# Build results and cache files
*.cache
*.AssemblyInfo.cs
*.AssemblyInfoInputs.cache
*.assets.cache
*.GeneratedMSBuildEditorConfig.editorconfig
**/obj/
**/bin/

# vs code files
.vscode/
